        -:    0:Source:test.c
        -:    0:Graph:test.gcno
        -:    0:Data:test.gcda
        -:    0:Runs:1
        -:    1:#include <CUnit/CUnit.h>
        -:    2:#include <CUnit/Console.h>
        -:    3:#include <CUnit/TestDB.h>
        -:    4:
        -:    5:#include <string.h>
        -:    6:#include "fizzbuzz.c"
        -:    7:#include "fizzbuzz.h"
        -:    8:#include "main.c"
        -:    9:
        -:   10:void fizzbuzz_test_1(void);
        -:   11:void fizzbuzz_test_3(void);
        -:   12:void fizzbuzz_test_5(void);
        -:   13:void fizzbuzz_test_15(void);
        -:   14:void fizzbuzz_test_30(void);
        -:   15:void get_str_test(void);
        -:   16:
        -:   17:#undef main
        -:   18:
        1:   19:int main(void) {
        -:   20:    CU_pSuite suite;
        1:   21:    CU_initialize_registry();
        -:   22:
        1:   23:    suite = CU_add_suite("FizzBuzz Test", NULL, NULL);
        1:   24:    CU_add_test(suite, "FizzBuzz_Test_1", fizzbuzz_test_1);
        1:   25:    CU_add_test(suite, "FizzBuzz_Test_3", fizzbuzz_test_3);
        1:   26:    CU_add_test(suite, "FizzBuzz_Test_5", fizzbuzz_test_5);
        1:   27:    CU_add_test(suite, "FizzBuzz_Test_15", fizzbuzz_test_15);
        1:   28:    CU_add_test(suite, "FizzBuzz_Test_30", fizzbuzz_test_30);
        -:   29:
        -:   30:    // テストを追加
        1:   31:    suite = CU_add_suite("FizzBuzz String Test", NULL, NULL);
        1:   32:    CU_add_test(suite, "get_str_test", get_str_test);
        -:   33:
        1:   34:    CU_console_run_tests();
        1:   35:    CU_cleanup_registry();
        1:   36:    return 0;
        -:   37:}
        -:   38:
        1:   39:void fizzbuzz_test_1(void) {
        -:   40:    char result[256];
        1:   41:    memset(result, '\0', sizeof(result));
        -:   42:
        1:   43:    fizzbuzz(1, result);
        -:   44:
        1:   45:    CU_ASSERT_STRING_EQUAL("1", result);
        1:   46:    return;
        -:   47:}
        -:   48:
        1:   49:void fizzbuzz_test_3(void) {
        -:   50:    char result[256];
        1:   51:    memset(result, '\0', sizeof(result));
        -:   52:
        1:   53:    fizzbuzz(3, result);
        -:   54:
        1:   55:    CU_ASSERT_STRING_EQUAL("Fizz", result);
        1:   56:    return;
        -:   57:}
        -:   58:
        1:   59:void fizzbuzz_test_5(void) {
        -:   60:    char result[256];
        1:   61:    memset(result, '\0', sizeof(result));
        -:   62:
        1:   63:    fizzbuzz(5, result);
        -:   64:
        1:   65:    CU_ASSERT_STRING_EQUAL("Buzz", result);
        1:   66:    return;
        -:   67:}
        -:   68:
        1:   69:void fizzbuzz_test_15(void) {
        -:   70:    char result[256];
        1:   71:    memset(result, '\0', sizeof(result));
        -:   72:
        1:   73:    fizzbuzz(15, result);
        -:   74:
        1:   75:    CU_ASSERT_STRING_EQUAL("FizzBuzz", result);
        1:   76:    return;
        -:   77:}
        -:   78:
        1:   79:void fizzbuzz_test_30(void) {
        -:   80:    char result[256];
        1:   81:    memset(result, '\0', sizeof(result));
        -:   82:
        1:   83:    CU_ASSERT_NOT_EQUAL_FATAL(fizzbuzz(30, result), 0);
        1:   84:    return;
        -:   85:}
        -:   86:
        1:   87:void get_str_test(void) {
        1:   88:    CU_ASSERT_STRING_EQUAL("Fizz", get_str_Fizz());
        1:   89:    CU_ASSERT_STRING_EQUAL("Buzz", get_str_Buzz());
        1:   90:    CU_ASSERT_STRING_EQUAL("FizzBuzz", get_str_FizzBuzz());
        1:   91:    return;
        -:   92:}
